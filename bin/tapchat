#!/usr/bin/env node

var path    = require('path');
var fs      = require('fs');
var program = require('commander');

var lib = path.join(path.dirname(fs.realpathSync(__filename)), '..', 'lib', 'tapchat');

var Config = require(path.join(lib, 'config'));
var Engine = require(path.join(lib, 'engine'));
var Log    = require(path.join(lib, 'log'));

program
  .version(Config.getAppVersion());

program
  .command('start')
  .option('-f, --foreground', 'run in foreground')
  .option('-v, --verbose', 'enable verbose logging')
  .action(function (cmd) {
    if (cmd.verbose) {
      Log.setLevel('silly');
    }
    Config.load(function (config) {
      new Engine(config, function (engine) {
        if (!cmd.foreground) {
          engine.daemonize();
        }
      });
    });
  });

program
  .command('stop')
  .action(function () {
    var pidFile = Config.getPidFile();
    if (!fs.existsSync(pidFile)) {
      console.log('TapChat is not running.');
      return;
    }

    var pid = fs.readFileSync(pidFile);
    try {
      process.kill(pid);
      fs.unlinkSync(pidFile);
      console.log('TapChat stopped');
    } catch (error) {
      if (error.code === 'ESRCH') {
        console.log('TapChat is not running (crashed?).');
        fs.unlinkSync(pidFile);
      } else {
        console.log('Unable to stop TapChat. Error:', error.code);
      }
    }
  });

program.parse(process.argv);
